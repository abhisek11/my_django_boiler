"""
Django settings for SSIL_SSO_MS project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# =============== ENV ===================
# import environ
# root = environ.Path(__file__) - 3 # three folder back (/a/b/c/ - 3 = /)
# env = environ.Env(DEBUG=(bool, False),) # set default values and casting
# environ.Env.read_env('.env') # reading .env file.
# environ.Env.read_env() 
# =============== ENV ===================

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'rd6)f1_h7@*ay@86e@)n(d#yfp8y$fsih1d_n9(*z73!9-awhb'
# print('SECRET_KEY: ', env('SECRET_KEY'))
# SECRET_KEY = env('SECRET_KEY')
SECRET_KEY='rd6)f1_h7@*ay@86e@)n(d#yfp8y$fsih1d_n9(*z73!9-awhb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',    
    'users',
    'core',
    'master',
    'rest_framework.authtoken',
    'corsheaders',
    'mailsend',
    'smssend',
    'pms',
    'holidays',
    'drf_yasg',
    'vms',
    'etask',
    'tickettool',  
    'hrms',
    # 'attendance.apps.AttendanceConfig',
    'attendance',
    'appversion',
    'eticket',
    'sslserver',
    # 'django_cron',
    'django_crontab',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'automated_logging.middleware.AutomatedLoggingMiddleware',
]

# CRON_CLASSES = [
# # "my_app.cron.MyCronJob",
# 'ssil_sso_ms.ssilcronjobs.MyCronJob',
# ]
CRONJOBS = [
    # ('10 16 * * *', 'SSIL_SSO_MS.cron.my_attendence_lock_job','>> /home/abhisek/Desktop/ssil_management/ssil_sso_ms/scheduled_job.log'),
    ('*17 16 * * *', 'SSIL_SSO_MS.cron.my_attendence_mail_before_lock_job','>> /home/abhisek/Desktop/ssil_management/ssil_sso_ms/mail_job.log'),
    #('*/1 * * * *', 'SSIL_SSO_MS.cron.my_attendence_mail_before_lock_job','>> C:\\Users\\suraj\\PycharmProjects\\ssilmanagement\\ssil_sso_ms\\ssil_sso_ms\mail_job.log'),
]



ROOT_URLCONF = 'SSIL_SSO_MS.urls'
CORS_ORIGIN_ALLOW_ALL = True
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SSIL_SSO_MS.wsgi.application'

SWAGGER_SETTINGS = {
   'SECURITY_DEFINITIONS': {
      'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
      }
   }
}
REDOC_SETTINGS = {
   'LAZY_RENDERING': True,
}
# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# DATABASES = {
#     'default': env.db()
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'SSIL_SSO_MS',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'OPTIONS': {
            'sql_mode': 'traditional',
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = ('backends.CaseInsensitiveModelBackend', )

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE =  'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

# USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'



# ============================ Oauth implementation =====================================#
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
   # 'EXCEPTION_HANDLER':'exceptions.root_simple_error_handler'
}
# ============================ Oauth implementation =====================================#




STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

#######
MSG_SUCCESS="Success"
MSG_NO_DATA="No Data Found"
MSG_ERROR="Failure"

#==================== For Mail ====================
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_FROM_C = 'support@shyamsteel.tech'
DEFAULT_FROM_EMAIL = 'support@shyamsteel.tech'

'''
    SMTP Configaration
'''

SERVER_EMAIL = 'support@shyamsteel.tech'
# EMAIL_USE_TLS = True
EMAIL_HOST = 'smtpauth.net4india.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'support@shyamsteel.tech'
EMAIL_HOST_PASSWORD = 'System21'


'''
    GMAIL Configaration (Demo)
'''
# SERVER_EMAIL = 'support@shyamsteel.tech'
# EMAIL_USE_TLS = True
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_HOST_USER = 'shyamdemo2018@gmail.com'
# EMAIL_HOST_PASSWORD = 'hjtrgqurebsusywx'



# ============= SMS configrations =================
SMS_URL = "https://sms.faresms.com/api_v2/message/send"
SMS_API_KEY = "g7B5sc9OU_y1f-f35t8LnfFO2VELyBzRdXATCxljovrfcJjDOI3hZV1XQO1X8zfY"
SMS_PORT = 80
SMS_USER = 'shail'
SMS_PASS = '62009'
SMS_SENDER = 'SSILMA'

######### TEXT LOCAL SMS GATEWAY CONFIGURATION ########

TXT_LOCAL_SMS_API_KEY = "TXjUs8d/J0w-nGlbXJH2yCDthHQ0xh8VDkVlM2Z8Xh"



# ============= SMS configrations =================





# ============= Error Msg configrations =================
MSG_SUCCESS="Success"
MSG_NO_DATA="No Data Found"
MSG_ERROR="Failure"
# ============= Error Msg configrations =================





# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error when DEBUG=False.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
from os.path import abspath, basename, dirname, join, normpath

DJANGO_ROOT = dirname(dirname(abspath(__file__)))

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'filters': {
#         'require_debug_false': {
#             '()': 'django.utils.log.RequireDebugFalse'
#         }
#     },
#     'handlers': {
#         'file': {
#             'level': 'ERROR',
#             'class': 'logging.FileHandler',
#             'filename': os.path.join(DJANGO_ROOT, 'debug.log'),
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['file'],
#             'level': 'ERROR',
#             'propagate': True,
#         },
#     },
# }


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
#             'datefmt' : "%d/%b/%Y %H:%M:%S"
#         },
#         'simple': {
#             'format': '%(levelname)s %(message)s'
#         },
#     },  
#     'handlers': {
#         'file': {
#             'level': 'ERROR',
#             'class': 'logging.handlers.TimedRotatingFileHandler',
#             'filename': os.path.join(DJANGO_ROOT, 'debug.log'),
#             'when': 'D', # this specifies the interval
#             'interval': 1, # defaults to 1, only necessary for other values 
#             'backupCount': 5, # how many backup file to keep, 5 days
#             'formatter': 'verbose',
#         },

#     },  
#     'loggers': {
#         'django': {
#             'handlers': ['file'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'ERROR'),
#         },
#         '': {
#             'handlers': ['file'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'ERROR'),
#         }
#     },  
# }